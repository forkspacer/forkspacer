# Examples of Git authentication secrets for private repositories

---
# HTTPS authentication with username and token/password
# Used with: https://github.com/myorg/private-charts
apiVersion: v1
kind: Secret
metadata:
  name: git-https-credentials
  namespace: default
type: Opaque
stringData:
  # For GitHub, GitLab, Bitbucket, etc.
  username: git  # or your actual username
  token: ghp_xxxxxxxxxxxxxxxxxxxx  # Personal Access Token or password

---
# SSH authentication with private key
# Used with: git@github.com:myorg/private-charts.git
apiVersion: v1
kind: Secret
metadata:
  name: git-ssh-key
  namespace: default
type: Opaque
stringData:
  sshPrivateKey: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn
    ... (your SSH private key content) ...
    -----END OPENSSH PRIVATE KEY-----

---
# GitHub App authentication (if needed in the future)
# Could be extended to support app-based auth
# apiVersion: v1
# kind: Secret
# metadata:
#   name: git-github-app
#   namespace: default
# type: Opaque
# stringData:
#   appID: "123456"
#   installationID: "789012"
#   privateKey: |
#     -----BEGIN RSA PRIVATE KEY-----
#     ...
#     -----END RSA PRIVATE KEY-----
