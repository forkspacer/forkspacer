name: Deploy Helm Charts to GitHub Pages

on:
  workflow_dispatch:
  repository_dispatch:
    types: [helm-pages-deploy]

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    # Run on manual dispatch or dependency update automation
    if: github.event_name == 'workflow_dispatch' || github.event_name == 'repository_dispatch'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract version information
        id: versions
        if: github.event_name == 'repository_dispatch'
        run: |
          echo "component=${{ github.event.client_payload.component }}" >> $GITHUB_OUTPUT
          echo "version=${{ github.event.client_payload.version }}" >> $GITHUB_OUTPUT
          echo "chart_version=${{ github.event.client_payload.chart_version }}" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install Kubebuilder
        run: |
          curl -L -o kubebuilder "https://github.com/kubernetes-sigs/kubebuilder/releases/download/v4.9.0/kubebuilder_linux_amd64"
          chmod +x kubebuilder
          sudo mv kubebuilder /usr/local/bin/
          kubebuilder version

      - name: Install Helm
        uses: azure/setup-helm@v4.2.0

      - name: Update dependency versions
        if: github.event_name == 'repository_dispatch' && steps.versions.outputs.component != 'forkspacer'
        run: |
          make update-dependency \
            COMPONENT="${{ steps.versions.outputs.component }}" \
            VERSION="${{ steps.versions.outputs.version }}" \
            CHART_VERSION="${{ steps.versions.outputs.chart_version }}"

      - name: Update forkspacer version
        if: github.event_name == 'repository_dispatch' && steps.versions.outputs.component == 'forkspacer'
        run: |
          make update-forkspacer-version VERSION="${{ steps.versions.outputs.version }}"

      - name: Create charts directory
        run: |
          make build-charts-site

      - name: Upload chart to GitHub release
        if: github.event_name == 'repository_dispatch' && steps.versions.outputs.component == 'forkspacer'
        run: |
          CHART_VERSION="${{ steps.versions.outputs.chart_version }}"
          VERSION="${{ steps.versions.outputs.version }}"
          CHART_FILE="forkspacer-${CHART_VERSION}.tgz"
          
          echo "üì¶ Uploading $CHART_FILE to release $VERSION..."
          
          gh release upload $VERSION $CHART_FILE --clobber
          echo "‚úÖ Chart uploaded to GitHub Release"
        env:
          GH_TOKEN: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}

      - name: Update existing release with dependency changes
        if: (github.event_name == 'repository_dispatch' && steps.versions.outputs.component != 'forkspacer') || github.event_name == 'workflow_dispatch'
        run: |
          # Get current chart version from Chart.yaml
          CHART_VERSION=$(grep '^version:' helm/Chart.yaml | awk '{print $2}' | tr -d '"' | tr -d "'")
          APP_VERSION=$(grep '^appVersion:' helm/Chart.yaml | awk '{print $2}' | tr -d '"' | tr -d "'")
          CHART_FILE="forkspacer-${CHART_VERSION}.tgz"
          
          echo "üì¶ Updating existing release $APP_VERSION with updated dependencies..."
          
          # Upload the updated chart to the existing release
          if gh release view $APP_VERSION > /dev/null 2>&1; then
            gh release upload $APP_VERSION $CHART_FILE --clobber
            echo "‚úÖ Updated chart in release $APP_VERSION with new dependencies"
          else
            echo "‚ö†Ô∏è Release $APP_VERSION not found. Chart will be available via GitHub Pages only."
          fi
        env:
          GH_TOKEN: ${{ secrets.DEPENDENCY_UPDATE_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: charts-site

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Summary
        run: |
          make helm-summary
