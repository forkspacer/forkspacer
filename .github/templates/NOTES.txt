🚀 Forkspacer has been successfully deployed!
{{- if index .Values "operator-ui" "enabled" }}
1. 🌐 RECOMMENDED ACCESS (via Unified Ingress - No CORS issues):
{{- if .Values.ingress.enabled }}
   
   # Add to your /etc/hosts file:
   NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
   echo "$NODE_IP {{ (index .Values.ingress.hosts 0).host }}" | sudo tee -a /etc/hosts
   
   # Get ingress port:
   {{- if (lookup "v1" "Service" "ingress-nginx" "ingress-nginx-controller") }}
   INGRESS_PORT=$(kubectl get svc ingress-nginx-controller -n ingress-nginx -o jsonpath='{.spec.ports[0].nodePort}')
   echo "🔗 Access Forkspacer at: http://{{ (index .Values.ingress.hosts 0).host }}:$INGRESS_PORT"
   {{- else }}
   echo "⚠️  Nginx ingress controller not found. Install based on your cluster:"
   echo ""
   echo "# For kind clusters:"
   echo "kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/kind/deploy.yaml"
   echo ""
   echo "# For minikube:"
   echo "minikube addons enable ingress"
   echo ""
   echo "# For cloud providers (AWS, GCP, Azure):"
   echo "kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/main/deploy/static/provider/cloud/deploy.yaml"
   {{- end }}
   
   ✅ Backend API automatically available at same URL under /api/
{{- end }}
2. 🔗 DIRECT ACCESS (via NodePort):
   
   # Get access information:
   NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
   UI_PORT=$(kubectl get svc {{ .Release.Name }}-operator-ui -n {{ .Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}')
   API_PORT=$(kubectl get svc {{ .Release.Name }}-api-server -n {{ .Release.Namespace }} -o jsonpath='{.spec.ports[0].nodePort}')
   
   echo "🖥️  Frontend: http://$NODE_IP:$UI_PORT"
   echo "🔌 API: http://$NODE_IP:$API_PORT"
   
   Note: Direct NodePort access may have CORS issues. Use ingress method above for best experience.
3. 📡 PORT-FORWARD ACCESS (Alternative):
   
   # Frontend:
   kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ .Release.Name }}-operator-ui 3000:80 &
   
   # Backend:
   kubectl --namespace {{ .Release.Name }} port-forward svc/{{ .Release.Name }}-api-server 8080:8080 &
   
   echo "🖥️  Frontend: http://localhost:3000"
   echo "📚 API Docs: http://localhost:8080/api/v1/docs"
{{- else }}
✅ Forkspacer Operator is running (UI disabled)
📚 API Access:
kubectl --namespace {{ .Release.Namespace }} port-forward svc/{{ .Release.Name }}-api-server 8080:8080
echo "📚 API Docs: http://localhost:8080/api/v1/docs"
To enable the web UI, upgrade with:
helm upgrade {{ .Release.Name }} ./helm --set operatorUI.enabled=true
{{- end }}
────────────────────────────────────────────────────────────────
🛠️  DEPLOYMENT EXAMPLES for different environments:
   # Local Development (kind/minikube) - Best of both worlds
   helm upgrade {{ .Release.Name }} ./helm \
     --set operator-ui.enabled=true \
     --set ingress.enabled=true \
     --set operatorUI.service.type=NodePort \
     --set api-server.service.type=NodePort
   # Production with custom domain and unified ingress
   helm upgrade {{ .Release.Name }} ./helm \
     --set operator-ui.enabled=true \
     --set ingress.enabled=true \
     --set ingress.hosts[0].host=forkspacer.company.com
   # Simple ClusterIP with port-forward
   helm upgrade {{ .Release.Name }} ./helm \
     --set operator-ui.enabled=true